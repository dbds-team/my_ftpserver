name: Build and Test

on:
  push:
    branches: 
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # 使用稳定的Go版本以确保兼容性
        go: ['1.19', '1.20']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Build binary
        run: go build -v ./...

  cross-compile:
    name: Cross Compile Test (Parallel)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Windows builds
          - goos: windows
            goarch: amd64
            binary: test-windows-amd64.exe
          - goos: windows
            goarch: 386
            binary: test-windows-386.exe
          - goos: windows
            goarch: arm64
            binary: test-windows-arm64.exe
          
          # Linux builds
          - goos: linux
            goarch: amd64
            binary: test-linux-amd64
          - goos: linux
            goarch: 386
            binary: test-linux-386
          - goos: linux
            goarch: arm
            goarm: 7
            binary: test-linux-armv7
          - goos: linux
            goarch: arm64
            binary: test-linux-arm64
          
          # macOS builds
          - goos: darwin
            goarch: amd64
            binary: test-darwin-amd64
          - goos: darwin
            goarch: arm64
            binary: test-darwin-arm64
          
          # FreeBSD builds
          - goos: freebsd
            goarch: amd64
            binary: test-freebsd-amd64
          - goos: freebsd
            goarch: 386
            binary: test-freebsd-386
          - goos: freebsd
            goarch: arm64
            binary: test-freebsd-arm64
          
          # OpenBSD builds
          - goos: openbsd
            goarch: amd64
            binary: test-openbsd-amd64
          - goos: openbsd
            goarch: 386
            binary: test-openbsd-386
          
          # NetBSD builds
          - goos: netbsd
            goarch: amd64
            binary: test-netbsd-amd64
          - goos: netbsd
            goarch: 386
            binary: test-netbsd-386
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          # 使用Go 1.19以确保与FreeBSD 10.3的兼容性
          go-version: '1.19'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Cross compile for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
          CGO_ENABLED: 0
        run: |
          echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}..."
          go build -tags netgo,osusergo -ldflags="-s -w" -o /tmp/${{ matrix.binary }}
          echo "✅ Successfully built ${{ matrix.binary }}"
          ls -lh /tmp/${{ matrix.binary }}

  build-summary:
    name: Build Summary
    needs: [test, cross-compile]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Summary
        run: |
          echo "### Build and Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.cross-compile.result }}" == "success" ]; then
            echo "✅ All cross-compilation targets succeeded" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some cross-compilation targets failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Go Version**: 1.19 (Compatible with FreeBSD 10.3+)" >> $GITHUB_STEP_SUMMARY